import pandas as pd
import streamlit as st
import altair as alt
from PIL import Image
import time

with st.container():

	image = Image.open("DNA.png")
	st.image(image,use_column_width=True)

	st.write("""
		# DNA Nucleotide Count Web App
		This app counts the nucleotide composition of query DNA!
		""")


	# Input Text Box

	st.header("Enter DNA Sequence")


	sequence_input = ">DNA Query- \nAGAAGCATTAAAACGGCCACCATGGCTCCGGACTTCATTTCATGTTTCGGATTCGCAATTAGGTTGGTGGTGGCATTACAGGACTCCCTCAAGCGGGTGCGTATGTTACTAGGAAGATTTCTCATGGGTTGGTGCAGATCTTGATCAATTGATGCGATACACAGAGATTTGAACTCTGCATTGCACACTTCTTGTCGGTTTCAACCGGCGATGCAGAGACCCTGGTCTGTTCGAGCCGCC\nATATGAAAGTGTTAGAACTGGACGTGCCGTTTCTCTGCGAAGAACACCTCGAGCTGTAGCGTTGTTGCGCTGCCTAGATGCAGTGTTGCTCATATCACATTTGCTTCAACGACTGCCGCCTTCGCTGTATCCCTAGACACTCAACAGTAAGCGCTTTTTGTAGGCAGGGGCACCCCCTATCAGTGACTGCGCCAAAACATCTTCGGATCCCCTTGTCCAATCAAACTCATCGAATTCTTACATTTAAGACCCTAATATCACATCATTAGTGATTAATTGCCACTGCCAAAATTCTGTCCAGAAGCGTTTTAGTTCGCTCCACTAAAGTTGTTTAAAACGACTACCAAATCCGCATGTTAGGGGATTTCTTATTAATTCTTTTATCGTGAGGAACAGCGGATCTTAATGGATGGCCGCAGGTGGTATGGAAGCTAATAGCGCGGGTGAGAGGGTAATCAGCCGTGTTCACCTACACAACGCTAACGGGCGATTCTATAAGATTCCGCATTGCGTCTACTTATAAGATGTCTCAACGGTATCCGCAACTTGTGAAGTGCCTACTATCCTTAAACGCATATCTCGCCCAGTAGCTTCCCAATATGTGAGCATCAATTGTTGTCCGGGCCGAGATAGTCATGTGCTCACGGAACTTACTGTATGAGTAGTGATTTGAAAGAGTTGTCAGTTTGCTGGTTCAGGTAAAGGTTCCTCACGCTACCTCAAAGTAAGAGAGCGGTCGTGACATTATCCGTGATTTTCTCACTACTATTAGTACTCACGACTCGATTCTGCCGCAGCCATGTTTCGCCAGAATGCCAGTCAGCATTAAGGAGAGCTCAGGGCAGGTCAACTCGCATAGTGAGGGTTACATGTTCGTTGGGCTCTTCCGACACGAACCTCAGTTAGCCTACATCCTACCAGAGGTCTGTGCCCCGGTGGTGAGAAGTGCGGATTTCGTATTTGCAGCTCGTCAGTACTTTCAGAATCATGGCCTGCACGG\nCAAAATGACGCTTATAATGGACTTCGACATGGCAATAACGCCTCGTTTCTACGTCAGGAGGAGAATAGTATAAACATAACTGCTGTCGGCAGAAGCGCCAAAGGAGTCTCTGAATTCTTATTCCCGAATAACATCCGTCTCCGTGCGGGAAAATCACCGACGGCGTTTTATAGAAGCCTAGGGGAACAGATTGGTCTAATTAGCTTAAGAGAGTAAATTCTGGGATCATTCAGTAGTAATCACAAATTTACGGTGGGGCTTTTTTGGCGGATCTTTACAGATACTAACCAGGTGATTTCAACTAATTTAGTTGACGATTTAGGCGCGCTATCCCGTAATCTTCAAATTAAAACATAGCGTTCCATGAGGGCTAGAATTACTTACCGGCCTTCACCATGCCTGCGTTATTCGCGCCCACTCTCCCATTTATCCGCGCAAGCGGATGCGATGCGATTGCCCGCTAAGATATTCTTACGTGTAACGTAGCTAAGTATTCTACAGAGCTGGCGTACGCGTTGAACACTTCACAGATGATAGGGATTCGGGTAAAGAGCGTGTCATTGGGGGCTTATACAGGCGTAGACTACAATGGGCCCAACTCAATCACAGCTCGAGCGCCTTGAATAACATACTCATCTCTATACATTCTCGACAATCTATCGAGCGAGTCGATTATCAACGGGTGTGTTGCAGTTTTAATCTCTTGCCAGCATTGTAATAGCCACCAAGAGATTGATGATAGTCATGGGTGCTGAGCTGAGACGGCGTCGATGCATAGCGGACTTTCGGTCAGTCGCAATTCCTCACGAGACTGGTCCTGTTGTGCGCATCACTCTCAATGTACAAGCAACCCAAGAAGGCTGAGCCTGGACTCAACCGGTTGCTGGGTGAACTCCAGACTCGGGGCGACAACTCTTCATACATAGAGCAAGGGCGTCGAACGGTCGTGAAAGTCTTAGTACCGCACGTACCAACTTACTGAGGATATTGCCTGAAGCTG"


	sequence = st.text_area("Sequence Input",sequence_input,height=250,placeholder="Enter")

	sequence = sequence.splitlines()
	sequence = sequence[1:]

	sequence = ''.join(sequence)

	
	st.write("""
	***
	""")

	# print the input-

	

	if st.button("Submit"):

		my_bar = st.progress(0)

		for percent_complete in range(100):
		     time.sleep(0.1)
		     my_bar.progress(percent_complete + 1)
		time.sleep(1)
		
		st.header("Input (DNA Query)")
		

		st.write(sequence)


		st.header("Output (DNA Nucleotide Count)")

		st.subheader('1. Print dictionary')

		def DNA_nucleotide_count(seq):
			d = dict([
				('A',seq.count('A')),
				('T',seq.count('T')),
				('G',seq.count('G')),
				('C',seq.count('C'))
				])

			return d


		X = DNA_nucleotide_count(sequence)
		X_lablel = list(X)
		X_values = list(X.values())

		X


		# print in text form-

		st.subheader('2. Print text')
		st.write(f"There are {str(X['A'])} adenine (A)")

		st.write(f"There are {str(X['T'])} thymine (T)")

		st.write(f"There are {str(X['G'])} adenine (guanine)")

		st.write(f"There are {str(X['C'])} thymine (cytosine)")


		# Display Dataframe

		st.subheader('3. Display DataFrame')

		df = pd.DataFrame.from_dict(X,orient='index')
		df = df.rename({0:'count'},axis='columns')
		df.reset_index(inplace=True)
		df = df.rename(columns={'index':'nucleotide'})
		st.write(df)


		# Bar Chart-

		st.subheader('4. Bar Chart')

		p = alt.Chart(df).mark_bar().encode(
			x = 'nucleotide',
			y = 'count'

			)


		p = p.properties(
			width = alt.Step(80)
			)

		st.write(p)






	


